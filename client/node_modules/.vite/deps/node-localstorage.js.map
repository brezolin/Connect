{
  "version": 3,
  "sources": ["browser-external:path", "browser-external:fs", "browser-external:events", "../../imurmurhash/imurmurhash.js", "../../signal-exit/src/signals.ts", "../../signal-exit/src/index.ts", "browser-external:util", "browser-external:worker_threads", "../../write-file-atomic/lib/index.js", "../../node-localstorage/LocalStorage.js"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"path\" has been externalized for browser compatibility. Cannot access \"path.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"fs\" has been externalized for browser compatibility. Cannot access \"fs.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"events\" has been externalized for browser compatibility. Cannot access \"events.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "/**\r\n * @preserve\r\n * JS Implementation of incremental MurmurHash3 (r150) (as of May 10, 2013)\r\n *\r\n * @author <a href=\"mailto:jensyt@gmail.com\">Jens Taylor</a>\r\n * @see http://github.com/homebrewing/brauhaus-diff\r\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\r\n * @see http://github.com/garycourt/murmurhash-js\r\n * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\r\n * @see http://sites.google.com/site/murmurhash/\r\n */\r\n(function(){\r\n    var cache;\r\n\r\n    // Call this function without `new` to use the cached object (good for\r\n    // single-threaded environments), or with `new` to create a new object.\r\n    //\r\n    // @param {string} key A UTF-16 or ASCII string\r\n    // @param {number} seed An optional positive integer\r\n    // @return {object} A MurmurHash3 object for incremental hashing\r\n    function MurmurHash3(key, seed) {\r\n        var m = this instanceof MurmurHash3 ? this : cache;\r\n        m.reset(seed)\r\n        if (typeof key === 'string' && key.length > 0) {\r\n            m.hash(key);\r\n        }\r\n\r\n        if (m !== this) {\r\n            return m;\r\n        }\r\n    };\r\n\r\n    // Incrementally add a string to this hash\r\n    //\r\n    // @param {string} key A UTF-16 or ASCII string\r\n    // @return {object} this\r\n    MurmurHash3.prototype.hash = function(key) {\r\n        var h1, k1, i, top, len;\r\n\r\n        len = key.length;\r\n        this.len += len;\r\n\r\n        k1 = this.k1;\r\n        i = 0;\r\n        switch (this.rem) {\r\n            case 0: k1 ^= len > i ? (key.charCodeAt(i++) & 0xffff) : 0;\r\n            case 1: k1 ^= len > i ? (key.charCodeAt(i++) & 0xffff) << 8 : 0;\r\n            case 2: k1 ^= len > i ? (key.charCodeAt(i++) & 0xffff) << 16 : 0;\r\n            case 3:\r\n                k1 ^= len > i ? (key.charCodeAt(i) & 0xff) << 24 : 0;\r\n                k1 ^= len > i ? (key.charCodeAt(i++) & 0xff00) >> 8 : 0;\r\n        }\r\n\r\n        this.rem = (len + this.rem) & 3; // & 3 is same as % 4\r\n        len -= this.rem;\r\n        if (len > 0) {\r\n            h1 = this.h1;\r\n            while (1) {\r\n                k1 = (k1 * 0x2d51 + (k1 & 0xffff) * 0xcc9e0000) & 0xffffffff;\r\n                k1 = (k1 << 15) | (k1 >>> 17);\r\n                k1 = (k1 * 0x3593 + (k1 & 0xffff) * 0x1b870000) & 0xffffffff;\r\n\r\n                h1 ^= k1;\r\n                h1 = (h1 << 13) | (h1 >>> 19);\r\n                h1 = (h1 * 5 + 0xe6546b64) & 0xffffffff;\r\n\r\n                if (i >= len) {\r\n                    break;\r\n                }\r\n\r\n                k1 = ((key.charCodeAt(i++) & 0xffff)) ^\r\n                     ((key.charCodeAt(i++) & 0xffff) << 8) ^\r\n                     ((key.charCodeAt(i++) & 0xffff) << 16);\r\n                top = key.charCodeAt(i++);\r\n                k1 ^= ((top & 0xff) << 24) ^\r\n                      ((top & 0xff00) >> 8);\r\n            }\r\n\r\n            k1 = 0;\r\n            switch (this.rem) {\r\n                case 3: k1 ^= (key.charCodeAt(i + 2) & 0xffff) << 16;\r\n                case 2: k1 ^= (key.charCodeAt(i + 1) & 0xffff) << 8;\r\n                case 1: k1 ^= (key.charCodeAt(i) & 0xffff);\r\n            }\r\n\r\n            this.h1 = h1;\r\n        }\r\n\r\n        this.k1 = k1;\r\n        return this;\r\n    };\r\n\r\n    // Get the result of this hash\r\n    //\r\n    // @return {number} The 32-bit hash\r\n    MurmurHash3.prototype.result = function() {\r\n        var k1, h1;\r\n        \r\n        k1 = this.k1;\r\n        h1 = this.h1;\r\n\r\n        if (k1 > 0) {\r\n            k1 = (k1 * 0x2d51 + (k1 & 0xffff) * 0xcc9e0000) & 0xffffffff;\r\n            k1 = (k1 << 15) | (k1 >>> 17);\r\n            k1 = (k1 * 0x3593 + (k1 & 0xffff) * 0x1b870000) & 0xffffffff;\r\n            h1 ^= k1;\r\n        }\r\n\r\n        h1 ^= this.len;\r\n\r\n        h1 ^= h1 >>> 16;\r\n        h1 = (h1 * 0xca6b + (h1 & 0xffff) * 0x85eb0000) & 0xffffffff;\r\n        h1 ^= h1 >>> 13;\r\n        h1 = (h1 * 0xae35 + (h1 & 0xffff) * 0xc2b20000) & 0xffffffff;\r\n        h1 ^= h1 >>> 16;\r\n\r\n        return h1 >>> 0;\r\n    };\r\n\r\n    // Reset the hash object for reuse\r\n    //\r\n    // @param {number} seed An optional positive integer\r\n    MurmurHash3.prototype.reset = function(seed) {\r\n        this.h1 = typeof seed === 'number' ? seed : 0;\r\n        this.rem = this.k1 = this.len = 0;\r\n        return this;\r\n    };\r\n\r\n    // A cached object to use. This can be safely used if you're in a single-\r\n    // threaded environment, otherwise you need to create new hashes to use.\r\n    cache = new MurmurHash3();\r\n\r\n    if (typeof(module) != 'undefined') {\r\n        module.exports = MurmurHash3;\r\n    } else {\r\n        this.MurmurHash3 = MurmurHash3;\r\n    }\r\n}());\r\n", "/**\n * This is not the set of all possible signals.\n *\n * It IS, however, the set of all signals that trigger\n * an exit on either Linux or BSD systems.  Linux is a\n * superset of the signal names supported on BSD, and\n * the unknown signals just fail to register, so we can\n * catch that easily enough.\n *\n * Windows signals are a different set, since there are\n * signals that terminate Windows processes, but don't\n * terminate (or don't even exist) on Posix systems.\n *\n * Don't bother with SIGKILL.  It's uncatchable, which\n * means that we can't fire any callbacks anyway.\n *\n * If a user does happen to register a handler on a non-\n * fatal signal like SIGWINCH or something, and then\n * exit, it'll end up firing `process.emit('exit')`, so\n * the handler will be fired anyway.\n *\n * SIGBUS, SIGFPE, SIGSEGV and SIGILL, when not raised\n * artificially, inherently leave the process in a\n * state from which it is not safe to try and enter JS\n * listeners.\n */\nexport const signals: NodeJS.Signals[] = []\nsignals.push('SIGHUP', 'SIGINT', 'SIGTERM')\n\nif (process.platform !== 'win32') {\n  signals.push(\n    'SIGALRM',\n    'SIGABRT',\n    'SIGVTALRM',\n    'SIGXCPU',\n    'SIGXFSZ',\n    'SIGUSR2',\n    'SIGTRAP',\n    'SIGSYS',\n    'SIGQUIT',\n    'SIGIOT'\n    // should detect profiler and enable/disable accordingly.\n    // see #21\n    // 'SIGPROF'\n  )\n}\n\nif (process.platform === 'linux') {\n  signals.push('SIGIO', 'SIGPOLL', 'SIGPWR', 'SIGSTKFLT')\n}\n", "// Note: since nyc uses this module to output coverage, any lines\n// that are in the direct sync flow of nyc's outputCoverage are\n// ignored, since we can never get coverage for them.\n// grab a reference to node's real process object right away\nimport { signals } from './signals.js'\nexport { signals }\n\n// just a loosened process type so we can do some evil things\ntype ProcessRE = NodeJS.Process & {\n  reallyExit: (code?: number | undefined | null) => any\n  emit: (ev: string, ...a: any[]) => any\n}\n\nconst processOk = (process: any): process is ProcessRE =>\n  !!process &&\n  typeof process === 'object' &&\n  typeof process.removeListener === 'function' &&\n  typeof process.emit === 'function' &&\n  typeof process.reallyExit === 'function' &&\n  typeof process.listeners === 'function' &&\n  typeof process.kill === 'function' &&\n  typeof process.pid === 'number' &&\n  typeof process.on === 'function'\n\nconst kExitEmitter = Symbol.for('signal-exit emitter')\nconst global: typeof globalThis & { [kExitEmitter]?: Emitter } = globalThis\nconst ObjectDefineProperty = Object.defineProperty.bind(Object)\n\n/**\n * A function that takes an exit code and signal as arguments\n *\n * In the case of signal exits *only*, a return value of true\n * will indicate that the signal is being handled, and we should\n * not synthetically exit with the signal we received. Regardless\n * of the handler return value, the handler is unloaded when an\n * otherwise fatal signal is received, so you get exactly 1 shot\n * at it, unless you add another onExit handler at that point.\n *\n * In the case of numeric code exits, we may already have committed\n * to exiting the process, for example via a fatal exception or\n * unhandled promise rejection, so it is impossible to stop safely.\n */\nexport type Handler = (\n  code: number | null | undefined,\n  signal: NodeJS.Signals | null\n) => true | void\ntype ExitEvent = 'afterExit' | 'exit'\ntype Emitted = { [k in ExitEvent]: boolean }\ntype Listeners = { [k in ExitEvent]: Handler[] }\n\n// teeny special purpose ee\nclass Emitter {\n  emitted: Emitted = {\n    afterExit: false,\n    exit: false,\n  }\n\n  listeners: Listeners = {\n    afterExit: [],\n    exit: [],\n  }\n\n  count: number = 0\n  id: number = Math.random()\n\n  constructor() {\n    if (global[kExitEmitter]) {\n      return global[kExitEmitter]\n    }\n    ObjectDefineProperty(global, kExitEmitter, {\n      value: this,\n      writable: false,\n      enumerable: false,\n      configurable: false,\n    })\n  }\n\n  on(ev: ExitEvent, fn: Handler) {\n    this.listeners[ev].push(fn)\n  }\n\n  removeListener(ev: ExitEvent, fn: Handler) {\n    const list = this.listeners[ev]\n    const i = list.indexOf(fn)\n    /* c8 ignore start */\n    if (i === -1) {\n      return\n    }\n    /* c8 ignore stop */\n    if (i === 0 && list.length === 1) {\n      list.length = 0\n    } else {\n      list.splice(i, 1)\n    }\n  }\n\n  emit(\n    ev: ExitEvent,\n    code: number | null | undefined,\n    signal: NodeJS.Signals | null\n  ): boolean {\n    if (this.emitted[ev]) {\n      return false\n    }\n    this.emitted[ev] = true\n    let ret: boolean = false\n    for (const fn of this.listeners[ev]) {\n      ret = fn(code, signal) === true || ret\n    }\n    if (ev === 'exit') {\n      ret = this.emit('afterExit', code, signal) || ret\n    }\n    return ret\n  }\n}\n\nabstract class SignalExitBase {\n  abstract onExit(cb: Handler, opts?: { alwaysLast?: boolean }): () => void\n  abstract load(): void\n  abstract unload(): void\n}\n\nconst signalExitWrap = <T extends SignalExitBase>(handler: T) => {\n  return {\n    onExit(cb: Handler, opts?: { alwaysLast?: boolean }) {\n      return handler.onExit(cb, opts)\n    },\n    load() {\n      return handler.load()\n    },\n    unload() {\n      return handler.unload()\n    },\n  }\n}\n\nclass SignalExitFallback extends SignalExitBase {\n  onExit() {\n    return () => {}\n  }\n  load() {}\n  unload() {}\n}\n\nclass SignalExit extends SignalExitBase {\n  // \"SIGHUP\" throws an `ENOSYS` error on Windows,\n  // so use a supported signal instead\n  /* c8 ignore start */\n  #hupSig = process.platform === 'win32' ? 'SIGINT' : 'SIGHUP'\n  /* c8 ignore stop */\n  #emitter = new Emitter()\n  #process: ProcessRE\n  #originalProcessEmit: ProcessRE['emit']\n  #originalProcessReallyExit: ProcessRE['reallyExit']\n\n  #sigListeners: { [k in NodeJS.Signals]?: () => void } = {}\n  #loaded: boolean = false\n\n  constructor(process: ProcessRE) {\n    super()\n    this.#process = process\n    // { <signal>: <listener fn>, ... }\n    this.#sigListeners = {}\n    for (const sig of signals) {\n      this.#sigListeners[sig] = () => {\n        // If there are no other listeners, an exit is coming!\n        // Simplest way: remove us and then re-send the signal.\n        // We know that this will kill the process, so we can\n        // safely emit now.\n        const listeners = this.#process.listeners(sig)\n        let { count } = this.#emitter\n        // This is a workaround for the fact that signal-exit v3 and signal\n        // exit v4 are not aware of each other, and each will attempt to let\n        // the other handle it, so neither of them do. To correct this, we\n        // detect if we're the only handler *except* for previous versions\n        // of signal-exit, and increment by the count of listeners it has\n        // created.\n        /* c8 ignore start */\n        const p = process as unknown as {\n          __signal_exit_emitter__?: { count: number }\n        }\n        if (\n          typeof p.__signal_exit_emitter__ === 'object' &&\n          typeof p.__signal_exit_emitter__.count === 'number'\n        ) {\n          count += p.__signal_exit_emitter__.count\n        }\n        /* c8 ignore stop */\n        if (listeners.length === count) {\n          this.unload()\n          const ret = this.#emitter.emit('exit', null, sig)\n          /* c8 ignore start */\n          const s = sig === 'SIGHUP' ? this.#hupSig : sig\n          if (!ret) process.kill(process.pid, s)\n          /* c8 ignore stop */\n        }\n      }\n    }\n\n    this.#originalProcessReallyExit = process.reallyExit\n    this.#originalProcessEmit = process.emit\n  }\n\n  onExit(cb: Handler, opts?: { alwaysLast?: boolean }) {\n    /* c8 ignore start */\n    if (!processOk(this.#process)) {\n      return () => {}\n    }\n    /* c8 ignore stop */\n\n    if (this.#loaded === false) {\n      this.load()\n    }\n\n    const ev = opts?.alwaysLast ? 'afterExit' : 'exit'\n    this.#emitter.on(ev, cb)\n    return () => {\n      this.#emitter.removeListener(ev, cb)\n      if (\n        this.#emitter.listeners['exit'].length === 0 &&\n        this.#emitter.listeners['afterExit'].length === 0\n      ) {\n        this.unload()\n      }\n    }\n  }\n\n  load() {\n    if (this.#loaded) {\n      return\n    }\n    this.#loaded = true\n\n    // This is the number of onSignalExit's that are in play.\n    // It's important so that we can count the correct number of\n    // listeners on signals, and don't wait for the other one to\n    // handle it instead of us.\n    this.#emitter.count += 1\n\n    for (const sig of signals) {\n      try {\n        const fn = this.#sigListeners[sig]\n        if (fn) this.#process.on(sig, fn)\n      } catch (_) {}\n    }\n\n    this.#process.emit = (ev: string, ...a: any[]) => {\n      return this.#processEmit(ev, ...a)\n    }\n    this.#process.reallyExit = (code?: number | null | undefined) => {\n      return this.#processReallyExit(code)\n    }\n  }\n\n  unload() {\n    if (!this.#loaded) {\n      return\n    }\n    this.#loaded = false\n\n    signals.forEach(sig => {\n      const listener = this.#sigListeners[sig]\n      /* c8 ignore start */\n      if (!listener) {\n        throw new Error('Listener not defined for signal: ' + sig)\n      }\n      /* c8 ignore stop */\n      try {\n        this.#process.removeListener(sig, listener)\n        /* c8 ignore start */\n      } catch (_) {}\n      /* c8 ignore stop */\n    })\n    this.#process.emit = this.#originalProcessEmit\n    this.#process.reallyExit = this.#originalProcessReallyExit\n    this.#emitter.count -= 1\n  }\n\n  #processReallyExit(code?: number | null | undefined) {\n    /* c8 ignore start */\n    if (!processOk(this.#process)) {\n      return 0\n    }\n    this.#process.exitCode = code || 0\n    /* c8 ignore stop */\n\n    this.#emitter.emit('exit', this.#process.exitCode, null)\n    return this.#originalProcessReallyExit.call(\n      this.#process,\n      this.#process.exitCode\n    )\n  }\n\n  #processEmit(ev: string, ...args: any[]): any {\n    const og = this.#originalProcessEmit\n    if (ev === 'exit' && processOk(this.#process)) {\n      if (typeof args[0] === 'number') {\n        this.#process.exitCode = args[0]\n        /* c8 ignore start */\n      }\n      /* c8 ignore start */\n      const ret = og.call(this.#process, ev, ...args)\n      /* c8 ignore start */\n      this.#emitter.emit('exit', this.#process.exitCode, null)\n      /* c8 ignore stop */\n      return ret\n    } else {\n      return og.call(this.#process, ev, ...args)\n    }\n  }\n}\n\nconst process = globalThis.process\n// wrap so that we call the method on the actual handler, without\n// exporting it directly.\nexport const {\n  /**\n   * Called when the process is exiting, whether via signal, explicit\n   * exit, or running out of stuff to do.\n   *\n   * If the global process object is not suitable for instrumentation,\n   * then this will be a no-op.\n   *\n   * Returns a function that may be used to unload signal-exit.\n   */\n  onExit,\n\n  /**\n   * Load the listeners.  Likely you never need to call this, unless\n   * doing a rather deep integration with signal-exit functionality.\n   * Mostly exposed for the benefit of testing.\n   *\n   * @internal\n   */\n  load,\n\n  /**\n   * Unload the listeners.  Likely you never need to call this, unless\n   * doing a rather deep integration with signal-exit functionality.\n   * Mostly exposed for the benefit of testing.\n   *\n   * @internal\n   */\n  unload,\n} = signalExitWrap(\n  processOk(process) ? new SignalExit(process) : new SignalExitFallback()\n)\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"util\" has been externalized for browser compatibility. Cannot access \"util.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"worker_threads\" has been externalized for browser compatibility. Cannot access \"worker_threads.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "'use strict'\nmodule.exports = writeFile\nmodule.exports.sync = writeFileSync\nmodule.exports._getTmpname = getTmpname // for testing\nmodule.exports._cleanupOnExit = cleanupOnExit\n\nconst fs = require('fs')\nconst MurmurHash3 = require('imurmurhash')\nconst { onExit } = require('signal-exit')\nconst path = require('path')\nconst { promisify } = require('util')\nconst activeFiles = {}\n\n// if we run inside of a worker_thread, `process.pid` is not unique\n/* istanbul ignore next */\nconst threadId = (function getId () {\n  try {\n    const workerThreads = require('worker_threads')\n\n    /// if we are in main thread, this is set to `0`\n    return workerThreads.threadId\n  } catch (e) {\n    // worker_threads are not available, fallback to 0\n    return 0\n  }\n})()\n\nlet invocations = 0\nfunction getTmpname (filename) {\n  return filename + '.' +\n    MurmurHash3(__filename)\n      .hash(String(process.pid))\n      .hash(String(threadId))\n      .hash(String(++invocations))\n      .result()\n}\n\nfunction cleanupOnExit (tmpfile) {\n  return () => {\n    try {\n      fs.unlinkSync(typeof tmpfile === 'function' ? tmpfile() : tmpfile)\n    } catch {\n      // ignore errors\n    }\n  }\n}\n\nfunction serializeActiveFile (absoluteName) {\n  return new Promise(resolve => {\n    // make a queue if it doesn't already exist\n    if (!activeFiles[absoluteName]) {\n      activeFiles[absoluteName] = []\n    }\n\n    activeFiles[absoluteName].push(resolve) // add this job to the queue\n    if (activeFiles[absoluteName].length === 1) {\n      resolve()\n    } // kick off the first one\n  })\n}\n\n// https://github.com/isaacs/node-graceful-fs/blob/master/polyfills.js#L315-L342\nfunction isChownErrOk (err) {\n  if (err.code === 'ENOSYS') {\n    return true\n  }\n\n  const nonroot = !process.getuid || process.getuid() !== 0\n  if (nonroot) {\n    if (err.code === 'EINVAL' || err.code === 'EPERM') {\n      return true\n    }\n  }\n\n  return false\n}\n\nasync function writeFileAsync (filename, data, options = {}) {\n  if (typeof options === 'string') {\n    options = { encoding: options }\n  }\n\n  let fd\n  let tmpfile\n  /* istanbul ignore next -- The closure only gets called when onExit triggers */\n  const removeOnExitHandler = onExit(cleanupOnExit(() => tmpfile))\n  const absoluteName = path.resolve(filename)\n\n  try {\n    await serializeActiveFile(absoluteName)\n    const truename = await promisify(fs.realpath)(filename).catch(() => filename)\n    tmpfile = getTmpname(truename)\n\n    if (!options.mode || !options.chown) {\n      // Either mode or chown is not explicitly set\n      // Default behavior is to copy it from original file\n      const stats = await promisify(fs.stat)(truename).catch(() => {})\n      if (stats) {\n        if (options.mode == null) {\n          options.mode = stats.mode\n        }\n\n        if (options.chown == null && process.getuid) {\n          options.chown = { uid: stats.uid, gid: stats.gid }\n        }\n      }\n    }\n\n    fd = await promisify(fs.open)(tmpfile, 'w', options.mode)\n    if (options.tmpfileCreated) {\n      await options.tmpfileCreated(tmpfile)\n    }\n    if (ArrayBuffer.isView(data)) {\n      await promisify(fs.write)(fd, data, 0, data.length, 0)\n    } else if (data != null) {\n      await promisify(fs.write)(fd, String(data), 0, String(options.encoding || 'utf8'))\n    }\n\n    if (options.fsync !== false) {\n      await promisify(fs.fsync)(fd)\n    }\n\n    await promisify(fs.close)(fd)\n    fd = null\n\n    if (options.chown) {\n      await promisify(fs.chown)(tmpfile, options.chown.uid, options.chown.gid).catch(err => {\n        if (!isChownErrOk(err)) {\n          throw err\n        }\n      })\n    }\n\n    if (options.mode) {\n      await promisify(fs.chmod)(tmpfile, options.mode).catch(err => {\n        if (!isChownErrOk(err)) {\n          throw err\n        }\n      })\n    }\n\n    await promisify(fs.rename)(tmpfile, truename)\n  } finally {\n    if (fd) {\n      await promisify(fs.close)(fd).catch(\n        /* istanbul ignore next */\n        () => {}\n      )\n    }\n    removeOnExitHandler()\n    await promisify(fs.unlink)(tmpfile).catch(() => {})\n    activeFiles[absoluteName].shift() // remove the element added by serializeSameFile\n    if (activeFiles[absoluteName].length > 0) {\n      activeFiles[absoluteName][0]() // start next job if one is pending\n    } else {\n      delete activeFiles[absoluteName]\n    }\n  }\n}\n\nasync function writeFile (filename, data, options, callback) {\n  if (options instanceof Function) {\n    callback = options\n    options = {}\n  }\n\n  const promise = writeFileAsync(filename, data, options)\n  if (callback) {\n    try {\n      const result = await promise\n      return callback(result)\n    } catch (err) {\n      return callback(err)\n    }\n  }\n\n  return promise\n}\n\nfunction writeFileSync (filename, data, options) {\n  if (typeof options === 'string') {\n    options = { encoding: options }\n  } else if (!options) {\n    options = {}\n  }\n  try {\n    filename = fs.realpathSync(filename)\n  } catch (ex) {\n    // it's ok, it'll happen on a not yet existing file\n  }\n  const tmpfile = getTmpname(filename)\n\n  if (!options.mode || !options.chown) {\n    // Either mode or chown is not explicitly set\n    // Default behavior is to copy it from original file\n    try {\n      const stats = fs.statSync(filename)\n      options = Object.assign({}, options)\n      if (!options.mode) {\n        options.mode = stats.mode\n      }\n      if (!options.chown && process.getuid) {\n        options.chown = { uid: stats.uid, gid: stats.gid }\n      }\n    } catch (ex) {\n      // ignore stat errors\n    }\n  }\n\n  let fd\n  const cleanup = cleanupOnExit(tmpfile)\n  const removeOnExitHandler = onExit(cleanup)\n\n  let threw = true\n  try {\n    fd = fs.openSync(tmpfile, 'w', options.mode || 0o666)\n    if (options.tmpfileCreated) {\n      options.tmpfileCreated(tmpfile)\n    }\n    if (ArrayBuffer.isView(data)) {\n      fs.writeSync(fd, data, 0, data.length, 0)\n    } else if (data != null) {\n      fs.writeSync(fd, String(data), 0, String(options.encoding || 'utf8'))\n    }\n    if (options.fsync !== false) {\n      fs.fsyncSync(fd)\n    }\n\n    fs.closeSync(fd)\n    fd = null\n\n    if (options.chown) {\n      try {\n        fs.chownSync(tmpfile, options.chown.uid, options.chown.gid)\n      } catch (err) {\n        if (!isChownErrOk(err)) {\n          throw err\n        }\n      }\n    }\n\n    if (options.mode) {\n      try {\n        fs.chmodSync(tmpfile, options.mode)\n      } catch (err) {\n        if (!isChownErrOk(err)) {\n          throw err\n        }\n      }\n    }\n\n    fs.renameSync(tmpfile, filename)\n    threw = false\n  } finally {\n    if (fd) {\n      try {\n        fs.closeSync(fd)\n      } catch (ex) {\n        // ignore close errors at this stage, error may have closed fd already.\n      }\n    }\n    removeOnExitHandler()\n    if (threw) {\n      cleanup()\n    }\n  }\n}\n", "// Generated by CoffeeScript 2.7.0\n(function() {\n  var JSONStorage, KEY_FOR_EMPTY_STRING, LocalStorage, MetaKey, QUOTA_EXCEEDED_ERR, StorageEvent, _emptyDirectory, _escapeKey, _rm, createMap, events, fs, path, writeSync;\n\n  path = require('path');\n\n  fs = require('fs');\n\n  events = require('events');\n\n  writeSync = require('write-file-atomic').sync;\n\n  KEY_FOR_EMPTY_STRING = '---.EMPTY_STRING.---'; // Chose something that no one is likely to ever use\n\n  _emptyDirectory = function(target) {\n    var i, len, p, ref, results;\n    ref = fs.readdirSync(target);\n    results = [];\n    for (i = 0, len = ref.length; i < len; i++) {\n      p = ref[i];\n      results.push(_rm(path.join(target, p)));\n    }\n    return results;\n  };\n\n  _rm = function(target) {\n    if (fs.statSync(target).isDirectory()) {\n      _emptyDirectory(target);\n      return fs.rmdirSync(target);\n    } else {\n      return fs.unlinkSync(target);\n    }\n  };\n\n  _escapeKey = function(key) {\n    var newKey;\n    if (key === '') {\n      newKey = KEY_FOR_EMPTY_STRING;\n    } else {\n      newKey = `${key}`;\n    }\n    return newKey;\n  };\n\n  QUOTA_EXCEEDED_ERR = class QUOTA_EXCEEDED_ERR extends Error {\n    constructor(message = 'Unknown error.') {\n      super();\n      this.message = message;\n      if (Error.captureStackTrace != null) {\n        Error.captureStackTrace(this, this.constructor);\n      }\n      this.name = this.constructor.name;\n    }\n\n    toString() {\n      return `${this.name}: ${this.message}`;\n    }\n\n  };\n\n  StorageEvent = class StorageEvent {\n    constructor(key1, oldValue1, newValue1, url, storageArea = 'localStorage') {\n      this.key = key1;\n      this.oldValue = oldValue1;\n      this.newValue = newValue1;\n      this.url = url;\n      this.storageArea = storageArea;\n    }\n\n  };\n\n  MetaKey = class MetaKey { // MetaKey contains key and size\n    constructor(key1, index1) {\n      this.key = key1;\n      this.index = index1;\n      if (!(this instanceof MetaKey)) {\n        return new MetaKey(this.key, this.index);\n      }\n    }\n\n  };\n\n  createMap = function() { // createMap contains Metakeys as properties\n    var Map;\n    Map = function() {};\n    Map.prototype = Object.create(null);\n    return new Map();\n  };\n\n  LocalStorage = (function() {\n    var instanceMap;\n\n    class LocalStorage extends events.EventEmitter {\n      constructor(_location, quota = 5 * 1024 * 1024) {\n        var handler;\n        super();\n        this._location = _location;\n        this.quota = quota;\n        // super(_location, quota)\n        // @_location = _location\n        // @quota = quota\n        if (!(this instanceof LocalStorage)) {\n          return new LocalStorage(this._location, this.quota);\n        }\n        this._location = path.resolve(this._location);\n        if (instanceMap[this._location] != null) {\n          return instanceMap[this._location];\n        }\n        this.length = 0; // !TODO: Maybe change this to a property with __defineProperty__\n        this._bytesInUse = 0;\n        this._keys = [];\n        this._metaKeyMap = createMap();\n        this._eventUrl = \"pid:\" + process.pid;\n        this._init();\n        this._QUOTA_EXCEEDED_ERR = QUOTA_EXCEEDED_ERR;\n        if (typeof Proxy !== \"undefined\" && Proxy !== null) {\n          handler = {\n            set: (receiver, key, value) => {\n              if (this[key] != null) {\n                this[key] = value;\n              } else {\n                this.setItem(key, value);\n              }\n              return true;\n            },\n            get: (receiver, key) => {\n              if (this[key] != null) {\n                return this[key];\n              } else {\n                return this.getItem(key);\n              }\n            },\n            ownKeys: (target) => {\n              return this._keys.map(function(k) {\n                if (k === KEY_FOR_EMPTY_STRING) {\n                  return '';\n                } else {\n                  return k;\n                }\n              });\n            },\n            getOwnPropertyDescriptor: (target, key) => {\n              return {\n                value: this[key],\n                enumerable: true,\n                configurable: true\n              };\n            }\n          };\n          instanceMap[this._location] = new Proxy(this, handler);\n          return instanceMap[this._location];\n        }\n        // else it'll return this\n        instanceMap[this._location] = this;\n        return instanceMap[this._location];\n      }\n\n      _init() {\n        var e, stat;\n        try {\n          stat = fs.statSync(this._location);\n          if ((stat != null) && !stat.isDirectory()) {\n            throw new Error(`A file exists at the location '${this._location}' when trying to create/open localStorage`);\n          }\n          // At this point, it exists and is definitely a directory. So read it.\n          this._sync();\n        } catch (error) {\n          e = error;\n          // If it errors, that might mean it didn't exist, so try to create it\n          if (e.code !== \"ENOENT\") {\n            throw e;\n          }\n          try {\n            fs.mkdirSync(this._location, {\n              recursive: true\n            });\n          } catch (error) {\n            e = error;\n            if (e.code !== \"EEXIST\") {\n              throw e;\n            }\n          }\n        }\n      }\n\n      _sync() {\n        var _MetaKey, _decodedKey, _keys, i, index, k, len, stat;\n        this._bytesInUse = 0;\n        this.length = 0;\n        _keys = fs.readdirSync(this._location);\n        for (index = i = 0, len = _keys.length; i < len; index = ++i) {\n          k = _keys[index];\n          _decodedKey = decodeURIComponent(k);\n          this._keys.push(_decodedKey);\n          _MetaKey = new MetaKey(k, index);\n          this._metaKeyMap[_decodedKey] = _MetaKey;\n          stat = this._getStat(k);\n          if ((stat != null ? stat.size : void 0) != null) {\n            _MetaKey.size = stat.size;\n            this._bytesInUse += stat.size;\n          }\n        }\n        return this.length = _keys.length;\n      }\n\n      setItem(key, value) {\n        var encodedKey, evnt, existsBeforeSet, filename, hasListeners, metaKey, oldLength, oldValue, valueString, valueStringLength;\n        hasListeners = this.listenerCount('storage');\n        oldValue = null;\n        if (hasListeners) {\n          oldValue = this.getItem(key);\n        }\n        key = _escapeKey(key);\n        encodedKey = encodeURIComponent(key).replace(/[!'()]/g, escape).replace(/\\*/g, \"%2A\");\n        filename = path.join(this._location, encodedKey);\n        valueString = `${value}`;\n        valueStringLength = valueString.length;\n        metaKey = this._metaKeyMap[key];\n        existsBeforeSet = !!metaKey;\n        if (existsBeforeSet) {\n          oldLength = metaKey.size;\n        } else {\n          oldLength = 0;\n        }\n        if (this._bytesInUse - oldLength + valueStringLength > this.quota) {\n          throw new QUOTA_EXCEEDED_ERR();\n        }\n        writeSync(filename, valueString, {\n          encoding: 'utf8'\n        });\n        if (!existsBeforeSet) {\n          metaKey = new MetaKey(encodedKey, (this._keys.push(key)) - 1);\n          metaKey.size = valueStringLength;\n          this._metaKeyMap[key] = metaKey;\n          this.length += 1;\n          this._bytesInUse += valueStringLength;\n        }\n        if (hasListeners) {\n          evnt = new StorageEvent(key, oldValue, value, this._eventUrl);\n          return this.emit('storage', evnt);\n        }\n      }\n\n      getItem(key) {\n        var filename, metaKey;\n        key = _escapeKey(key);\n        metaKey = this._metaKeyMap[key];\n        if (!!metaKey) {\n          filename = path.join(this._location, metaKey.key);\n          return fs.readFileSync(filename, 'utf8');\n        } else {\n          return null;\n        }\n      }\n\n      _getStat(key) {\n        var filename;\n        key = _escapeKey(key);\n        filename = path.join(this._location, encodeURIComponent(key));\n        try {\n          return fs.statSync(filename);\n        } catch (error) {\n          return null;\n        }\n      }\n\n      removeItem(key) {\n        var evnt, filename, hasListeners, k, meta, metaKey, oldValue, ref, v;\n        key = _escapeKey(key);\n        metaKey = this._metaKeyMap[key];\n        if (!!metaKey) {\n          hasListeners = this.listenerCount('storage');\n          oldValue = null;\n          if (hasListeners) {\n            oldValue = this.getItem(key);\n          }\n          delete this._metaKeyMap[key];\n          this.length -= 1;\n          this._bytesInUse -= metaKey.size;\n          filename = path.join(this._location, metaKey.key);\n          this._keys.splice(metaKey.index, 1);\n          ref = this._metaKeyMap;\n          for (k in ref) {\n            v = ref[k];\n            meta = this._metaKeyMap[k];\n            if (meta.index > metaKey.index) {\n              meta.index -= 1;\n            }\n          }\n          _rm(filename);\n          if (hasListeners) {\n            evnt = new StorageEvent(key, oldValue, null, this._eventUrl);\n            return this.emit('storage', evnt);\n          }\n        }\n      }\n\n      key(n) {\n        var rawKey;\n        rawKey = this._keys[n];\n        if (rawKey === KEY_FOR_EMPTY_STRING) {\n          return '';\n        } else {\n          return rawKey;\n        }\n      }\n\n      clear() {\n        var evnt;\n        _emptyDirectory(this._location);\n        this._metaKeyMap = createMap();\n        this._keys = [];\n        this.length = 0;\n        this._bytesInUse = 0;\n        if (this.listenerCount('storage')) {\n          evnt = new StorageEvent(null, null, null, this._eventUrl);\n          return this.emit('storage', evnt);\n        }\n      }\n\n      _getBytesInUse() {\n        return this._bytesInUse;\n      }\n\n      _deleteLocation() {\n        delete instanceMap[this._location];\n        _rm(this._location);\n        this._metaKeyMap = {};\n        this._keys = [];\n        this.length = 0;\n        return this._bytesInUse = 0;\n      }\n\n    };\n\n    instanceMap = {};\n\n    return LocalStorage;\n\n  }).call(this);\n\n  JSONStorage = class JSONStorage extends LocalStorage {\n    setItem(key, value) {\n      var newValue;\n      newValue = JSON.stringify(value);\n      return super.setItem(key, newValue);\n    }\n\n    getItem(key) {\n      return JSON.parse(super.getItem(key));\n    }\n\n  };\n\n  exports.LocalStorage = LocalStorage;\n\n  exports.JSONStorage = JSONStorage;\n\n  exports.QUOTA_EXCEEDED_ERR = QUOTA_EXCEEDED_ERR;\n\n}).call(this);\n"],
  "mappings": "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",
  "names": ["process", "MetaKey", "LocalStorage", "error"]
}
